CREATE CONSTRAINT edge_device_id_unique IF NOT EXISTS
FOR (es:EdgeDevice) REQUIRE es.device_id IS UNIQUE;

CREATE CONSTRAINT raw_image_uuid_unique IF NOT EXISTS
FOR (ri:RawImage) REQUIRE ri.UUID IS UNIQUE;

CREATE CONSTRAINT model_id_unique IF NOT EXISTS
FOR (md:Model) REQUIRE md.model_id IS UNIQUE;

CREATE CONSTRAINT experiment_uuid_unique IF NOT EXISTS
FOR (ex:Experiment) REQUIRE ex.experiment_id IS UNIQUE;

CREATE CONSTRAINT user_id_unique IF NOT EXISTS
FOR (user:User) REQUIRE user.user_id IS UNIQUE;

CREATE CONSTRAINT compiler_app_id IF NOT EXISTS
FOR (app:Application) REQUIRE app.name IS UNIQUE;

CREATE CONSTRAINT compiler_profiler IF NOT EXISTS
FOR (opt:Profiling) REQUIRE opt.uuid IS UNIQUE;

CREATE CONSTRAINT modelcard_id IF NOT EXISTS
FOR (mc:ModelCard) REQUIRE mc.external_id IS UNIQUE;

CREATE CONSTRAINT ai_model_id IF NOT EXISTS
FOR (ai:AIModel) REQUIRE ai.external_id IS UNIQUE;

CREATE CONSTRAINT model_id IF NOT EXISTS
FOR (m:Model) REQUIRE m.model_id IS UNIQUE;

CREATE CONSTRAINT datasheet_id IF NOT EXISTS
FOR (ds:Datasheet) REQUIRE ds.external_id IS UNIQUE;

CREATE CONSTRAINT deployment_id IF NOT EXISTS
FOR (depl:Deployment) REQUIRE depl.deployment_id IS UNIQUE;

CREATE VECTOR INDEX `modelEmbeddings` IF NOT EXISTS
FOR (m:ModelCard)
ON m.embedding
OPTIONS {indexConfig: {
 `vector.dimensions`: 300,
 `vector.similarity_function`: 'cosine'
}}

CREATE FULLTEXT INDEX mcFullIndex FOR (n:ModelCard) ON EACH
[n.name, n.short_description, n.full_description, n.keywords, n.author]


# recreate the input json
MATCH (es:EdgeServer)<-[r:SERVED_BY]-(ri:RawImage)
RETURN {
  image_count: r.image_count,
  UUID: ri.UUID,
  image_name: ri.image_name,
  ground_truth: ri.ground_truth,
  image_receiving_timestamp: toString(r.image_receiving_timestamp),
  image_scoring_timestamp: toString(r.image_scoring_timestamp),
  model_id: r.model_id,
  scores: r.scores,
  image_store_delete_time: toString(r.image_store_delete_time),
  image_decision: r.image_decision,
  device_id: es.device_id
} AS event

# example ingestion query
MERGE (es:EdgeServer {device_id: 1})
MERGE (ri:RawImage {
  UUID: "67b83445-2622-50a3-be3b-f7030259576e",
  name: "/example_images/baby-red-fox.jpg",
  ground_truth: "animal"
})
MERGE (es)<-[r:SERVED_BY]-(ri)
SET r = {
  image_count: 2,
  image_receiving_timestamp: datetime("2024-07-03T20:36:43.081449616+00:00"),
  image_scoring_timestamp: datetime("2024-07-03T18:56:51.049901"),
  model_id: "resnet-v2.0-sss",
  scores: "[{"label": "vehicle", "probability": 0.08139999955892563}]"
  image_store_delete_time: datetime("2024-07-03T18:56:51.052142827+00:00"),
  image_decision: "Save",
  ingestion_timestamp: datetime()
}